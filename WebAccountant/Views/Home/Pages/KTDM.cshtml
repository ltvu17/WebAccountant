@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model WebAccountant.ModelsBase.Ktdm
@{
    Html.RenderPartial("../Home/Header");
}
<div class="text-center">
    <div class="home-container">
        @Html.Partial("../Home/SideBar")
        <div class="right-bar-home content">
            @*Navbar Here*@
            <nav class="navbar navbar-expand-lg navbar-light bg-light d-flex">
                <div class="container-fluid">
                    <div class="collapse navbar-collapse" id="navbarSupportedContent">
                        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                            <li class="nav-item">
                                <a class="nav-link active" aria-current="page" href="#">Danh sách</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="#">Đơn mua hàng</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="#">Mua hàng</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="#">Nhận hóa đơn</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="#">Nhận hóa đơn</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="#">Trả lại hàng</a>
                            </li>
                        </ul>
                    </div>
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                </div>
            </nav>

            @*Modal*@
            <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" style="color: #119583;" id="exampleModalLabel">Thêm Hàng Hóa</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
                        </div>
                        <div class="modal-body">
                            <form method="post" asp-controller="Ktdms" asp-action="Post">
                                <div class="row">
                                    <div class="col-md-4 text-start">
                                        <label for="input-madm" class="col-form-label">Mã hàng hóa:</label>
                                        <input type="text" class="form-control input-sugg"
                                               id="input-madm"
                                               autofocus="autofocus"
                                               autocomplete="off"
                                               placeholder="Nhập mặt hàng(nếu có)..."
                                               asp-for="Madm"
                                               onkeyup="SearchNow('list-madm-sugg','input-madm','list-madm-sugg')" />
                                        <div class="table-container">
                                            <table id="list-madm-sugg" class="sugg-container d-none">
                                                <tr id="tr-1">
                                                    <td class="width-120">Mã khách hàng</td>
                                                    <td class="width-250">Tên khách hàng</td>
                                                </tr>
                                            </table>
                                        </div>
                                        <span asp-validation-for="Madm" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-8 text-start">
                                        <label for="tendm" class="col-form-label">Tên hàng hóa:</label>
                                        <input type="text" class="form-control" asp-for="Tendm" id="tendm">
                                        <span asp-validation-for="Tendm" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4 text-start">
                                        <label for="mahh" class="col-form-label">Mã tài khoản:</label>
                                        <input type="text" class="form-control" asp-for="Matk" id="mahh">
                                        <span asp-validation-for="Matk" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-4 text-start">
                                        <label for="dgb" class="col-form-label">Đơn giá bán:</label>
                                        <input type="text" class="form-control" asp-for="Madm" id="dgb">
                                        <span asp-validation-for="Madm" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-4 text-start">
                                        <label for="dgx" class="col-form-label">Đơn giá xuất:</label>
                                        <input type="text" class="form-control" asp-for="Tendm" id="dgx">
                                        <span asp-validation-for="Tendm" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4 text-start">
                                        <label for="dvt" class="col-form-label">Đơn vị tính:</label>
                                        <input type="text" class="form-control" asp-for="Madm" id="dvt">
                                        <span asp-validation-for="Madm" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-4 text-start">
                                            <label for="tdk-gt" class="col-form-label">Tồn đầu kì - Giá trị:</label>
                                            <input type="text" class="form-control" asp-for="Donvi" id="tdk-gt">
                                            <span asp-validation-for="Donvi" class="text-danger"></span>
                                        </div>
                                    <div class="col-md-4 text-start">
                                            <label for="tdk-sl" class="col-form-label">Tồn đầu kỳ - Số lượng:</label>
                                            <input type="text" class="form-control" asp-for="Tendm" id="tdk-sl">
                                            <span asp-validation-for="Tendm" class="text-danger"></span>
                                        </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                                    <button type="submit" class="btn btn-primary">Thêm</button>
                                </div>
                            </form>
                        </div>
                        
                    </div>
                </div>
            </div>

            @*Data Here*@
            @(
                Html.DevExtreme().DataGrid<WebAccountant.ModelsBase.Ktdm>()
                .DataSource(ds => ds.Mvc()
                .Controller("Ktdms")
                .LoadAction("Get")
                .UpdateAction("Put")
                .DeleteAction("Delete")
                .Key("Madm", "Matk")
                )
                .RemoteOperations(true)
                .FocusedRowEnabled(true)
                .Columns(columns =>
                {
                    columns.AddFor(m => m.Matk);

                    columns.AddFor(m => m.Madm).Caption("Mã danh mục").Fixed(true);

                    columns.AddFor(m => m.Tendm).Caption("Tên danh mục").Fixed(true);

                    columns.AddFor(m => m.Manhom);

                    columns.AddFor(m => m.Tennhom);

                    columns.AddFor(m => m.Kyhieu).Caption("Ký hiệu");

                    columns.AddFor(m => m.Donvi).Caption("Đơn vị");

                    columns.AddFor(m => m.Lo);

                    columns.AddFor(m => m.Ngaylo);

                    columns.AddFor(m => m.Hansudung);

                    columns.AddFor(m => m.Nhacungcap);

                    columns.AddFor(m => m.Nhasanxuat);

                    columns.AddFor(m => m.Ptchietkhau).Caption("Phần trăm chiết khấu");

                    columns.AddFor(m => m.Thuesuat);

                    columns.AddFor(m => m.Dgxuat).Caption("Đơn giá xuất");

                    columns.AddFor(m => m.TonT);

                    columns.AddFor(m => m.VndtonT);

                    columns.AddFor(m => m.NhapT);

                    columns.AddFor(m => m.VndnhapT);

                    columns.AddFor(m => m.XuatT);

                    columns.AddFor(m => m.VndxuatT);

                    columns.AddFor(m => m.TonCk);

                    columns.AddFor(m => m.VndtonCk);

                    columns.AddFor(m => m.Danhdau);

                    columns.AddFor(m => m.Dgban).Caption("Đơn giá bán");

                    columns.AddFor(m => m.Dgban1).Caption("Đơn giá bán 1");

                    columns.AddFor(m => m.Dgban2).Caption("Đơn giá bán 2");

                    columns.AddFor(m => m.Dgban3).Caption("Đơn giá bán 3");

                    columns.AddFor(m => m.Dgban4).Caption("Đơn giá bán 4");

                    columns.AddFor(m => m.Donvi1).Caption("Đơn vị 1");

                    columns.AddFor(m => m.Donvi2).Caption("Đơn vị 2");

                    columns.AddFor(m => m.Donvi3).Caption("Đơn vị 3");

                    columns.AddFor(m => m.Hsqd1);

                    columns.AddFor(m => m.Hsqd2);

                    columns.AddFor(m => m.Hsqd3);

                    columns.AddFor(m => m.UsdtonT);

                    columns.AddFor(m => m.UsdnhapT);

                    columns.AddFor(m => m.UsdxuatT);

                    columns.AddFor(m => m.UsdtonCk);

                    columns.AddFor(m => m.Dgusd);

                    columns.AddFor(m => m.Dgnhap1).Caption("Đơn giá nhập 1");

                    columns.AddFor(m => m.Dgnhap2).Caption("Đơn giá nhập 2");

                    columns.AddFor(m => m.Dgnhap3).Caption("Đơn giá nhập 3");

                    columns.AddFor(m => m.Dgnhap4).Caption("Đơn giá nhập 4");

                    columns.AddFor(m => m.Dgnhap5).Caption("Đơn giá nhập 5");

                    columns.AddFor(m => m.Trangthai);

                    columns.AddFor(m => m.Dgnhap);

                    columns.AddFor(m => m.DgChuyenkho);

                    columns.AddFor(m => m.DgCktm);

                    columns.AddFor(m => m.DgVc);

                    columns.AddFor(m => m.DmCktm);

                    columns.AddFor(m => m.Gioihanton);

                    columns.AddFor(m => m.MadmMe);

                    columns.AddFor(m => m.Manhom1);

                    columns.AddFor(m => m.Manhom2);

                    columns.AddFor(m => m.Manhomtp);

                    columns.AddFor(m => m.Model);

                    columns.AddFor(m => m.SoDdh);

                    columns.AddFor(m => m.TenDdh);

                    columns.AddFor(m => m.TendmMe);

                    columns.AddFor(m => m.Tennhom1);

                    columns.AddFor(m => m.Tennhom2);

                    columns.AddFor(m => m.Tennhomtp);

                    columns.AddFor(m => m.TgCktm);

                    columns.AddFor(m => m.TkChietkhau);

                    columns.AddFor(m => m.TkDoanhthu);

                    columns.AddFor(m => m.TkGiavon);

                    columns.AddFor(m => m.TkTralai);

                    columns.AddFor(m => m.TyleOfNhom);

                    columns.AddFor(m => m.NhapTDv1);

                    columns.AddFor(m => m.NhapTDv2);

                    columns.AddFor(m => m.TonCkDv1);

                    columns.AddFor(m => m.TonCkDv2);

                    columns.AddFor(m => m.TonTDv1);

                    columns.AddFor(m => m.TonTDv2);

                    columns.AddFor(m => m.XuatTDv1);

                    columns.AddFor(m => m.XuatTDv2);

                    columns.AddFor(m => m.Nhomck);

                    columns.AddFor(m => m.Makho);

                    columns.AddFor(m => m.Mavach);

                    columns.AddFor(m => m.GioihantonMax);

                    columns.AddFor(m => m.IdUpdate);

                    columns.AddFor(m => m.Tendm2);

                    columns.AddFor(m => m.DgbanGanNhat);

                    columns.AddFor(m => m.DgmuaGanNhat);

                    columns.AddFor(m => m.Ghichu);

                    columns.AddFor(m => m.NgaybanGanNhat);

                    columns.AddFor(m => m.NgaymuaGanNhat);

                    columns.AddFor(m => m.Quycach);

                    columns.AddFor(m => m.Songaysudung);
                }).ColumnAutoWidth(true).AllowColumnResizing(true).ColumnResizingMode(ColumnResizingMode.Widget).FilterRow(ft => ft.Visible(true))
                .ShowBorders(true)
                .RowAlternationEnabled(true)
                .Editing(e =>
                {
                    e.Mode(GridEditMode.Batch)
                    .AllowUpdating(true).UseIcons(true)
                    .AllowDeleting(true);
                    e.SelectTextOnEditStart(true);
                    e.StartEditAction(GridStartEditAction.DblClick);
                })
                .Paging(paging => paging.PageSize(15))
                .Pager(pager =>
                {
                    pager.Visible(true);
                    pager.DisplayMode(GridPagerDisplayMode.Compact);
                    pager.ShowPageSizeSelector(true);
                    pager.AllowedPageSizes(new JS("[10, 15, 25, 40]"));
                    pager.ShowInfo(true);
                    pager.ShowNavigationButtons(true);
                })
                .OnRowInserted("onRowInserted")
                .OnContextMenuPreparing("OpenMenu").ID("grid")
                )
            <div class="footer-data d-flex justify-content-start">
                <button class="btn btn-primary width-100" data-bs-toggle="modal" id="btnAdd" data-bs-target="#exampleModal">Thêm</button>
                <button class="btn btn-primary width-100" type="button" onclick="onEdit()">Sửa</button>
                <button class="btn btn-primary width-100" type="button" onclick="onDelete()">Xóa</button>
            </div>
        </div>
    </div>
</div>

<script>
    function SearchNow(idSugg, idInput, idUl) {
        document.getElementById(idSugg).classList.remove("d-none");
        var input, filter, ul, li, a, i, txtValue;
        input = document.getElementById(idInput);
        filter = input.value.toUpperCase();
        ul = document.getElementById(idUl);
        li = ul.getElementsByTagName('li');

        var table = document.getElementById(idSugg);
        var tr = table.getElementsByTagName('tr');
        for (i = 1; i < tr.length; i++) {
            tdMa = tr[i].getElementsByTagName("td")[0];
            maValue = tdMa.textContent || tdMa.innerText;
            tdTen = tr[i].getElementsByTagName("td")[1];
            tenValue = tdTen.textContent || tdTen.innerText;
            if (maValue.toUpperCase().indexOf(filter) > -1 || tenValue.toUpperCase().indexOf(filter) > -1) {
              tr[i].style.display = "";
            } else {
              tr[i].style.display = "none";
            }
        }
    }
    var madm = [
        {
            Madm: "",
            Tendm: "",
            TonT: ""
        }
    ];
    $.ajax({
        url: '@Url.Action("Get", "Ktdms")',
        type: 'GET',
        success: function (result) {
            if (result.data.length > 0) {
                madm = result.data;
                for (var i = 0; i < madm.length; i++) {
                    const list = document.getElementById("list-madm-sugg");
                    list.insertAdjacentHTML('beforeend', `
                                                    <tr class="tr-sugg" onclick="madmChooseItem('${encodeURIComponent(JSON.stringify(madm[i]))}')"><td>${madm[i].Madm}</td><td>${madm[i].Tendm}</td></tr>
                                    `);
                }
            }
        }
    });
    function hide_sugg(idSugg) {
        document.getElementById(idSugg).classList.add("d-none");
    }
    function madmChooseItem(item) {
        hide_sugg("list-madm-sugg");
        var addItem = JSON.parse(decodeURIComponent(item));
        var madmDTO = {
            Matk: addItem.Matk,
            Madm: addItem.Madm,
            Tendm: addItem.Tendm,
            Donvi: addItem.Donvi,
            Dgban: 0,
            TonTDv1: addItem.TonTDv1,
            PtChietkhau: 0,
            PtThue: 0,
        }
        document.getElementById('input-madm').value = JSON.parse(decodeURIComponent(item)).Madm;
        document.getElementById('mahh').value = JSON.parse(decodeURIComponent(item)).Matk;
        document.getElementById('tendm').value = JSON.parse(decodeURIComponent(item)).Tendm;
        document.getElementById('dgb').value = 0;
        document.getElementById('dgx').value = 0;
        document.getElementById('dvt').value = JSON.parse(decodeURIComponent(item)).Donvi;
        document.getElementById('tdk-gt').value = 0;
        document.getElementById('tdk-sl').value = 0;
    }
    function onDelete() {
        var grid = document.getElementById("grid");
        var row = grid.getElementsByClassName("dx-row-focused")[0];
        if (row == null) {
                alert("Hãy chọn hàng cần xóa")
        } else {
            var deleteLink = row.getElementsByClassName("dx-link-delete")[0];
            deleteLink.click();
        }
    }
    function onEdit() {
        var grid = document.getElementById("grid");
        var row = grid.getElementsByClassName("dx-row-focused")[0];
        if (row == null) {
                alert("Hãy chọn hàng cần sửa")
        } else {
            $('#btnAdd').click();
        }
    }
    function OpenMenu(e) {
        if (e.rowIndex != -1) {
            if (!e.items) e.items = [];
            const contextMenuItem = [
                {
                    text: "Sửa",
                    onItemClick: function (args) {
                        $('#btnAdd').click();
                    }
                },
                {
                    text: "Xóa",
                    onItemClick: function (args) {
                        var grid = document.getElementById("grid");
                        var row = grid.getElementsByClassName("dx-row-focused")[0];
                        var deleteLink = row.getElementsByClassName("dx-link-delete")[0];
                        deleteLink.click();
                    }
                },
            ];
            contextMenuItem.forEach((item) => {
                e.items.push(item);
            })
        }
    }
    

    function onRowInserted(e) {
        e.component.navigateToRow(e.key);
        e.component.option("focusedRowKey", e.key);
    }
</script>
